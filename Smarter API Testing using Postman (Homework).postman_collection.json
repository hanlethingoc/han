{
	"info": {
		"_postman_id": "1a14882c-60a1-4672-9de5-95aafeffda73",
		"name": "Smarter API Testing using Postman (Homework)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "20332483"
	},
	"item": [
		{
			"name": "Register successfully",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Id and token fields must exist in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('token');",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}"
				},
				"url": "{{url}}/api/register"
			},
			"response": [
				{
					"name": "Register successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}"
						},
						"url": "{{url}}/api/register"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"data\": {\r\n        \"email\": \"{{$body 'email'}}\",  \r\n        \"message\": \"Register successfully\",\r\n        \"id\": {{$randomInt}},\r\n        \"token\": \"{{$randomUUID}}\"\r\n    }\r\n} "
				}
			]
		},
		{
			"name": "Register failed due to missing password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();",
							"",
							"",
							"pm.test(\"Response status code is 400\", function () {",
							"  pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field - error\", function () {",
							"  pm.expect(responseData).to.have.property('error');",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields and data types\", function () {",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Value of the error key in the response body is 'Missing password'\", function () {",
							"    pm.expect(responseData.error).to.equal('Missing password');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"\"\r\n}"
				},
				"url": "{{url}}/api/register"
			},
			"response": [
				{
					"name": "Register failed due to missing password",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/api/register"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 14 Oct 2024 09:58:16 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "28"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1728899896&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PmrMn1DqkagJR3ShNP3U%2BH3tTvcRuOKgKKU3LPuXrL4%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1728899896&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=PmrMn1DqkagJR3ShNP3U%2BH3tTvcRuOKgKKU3LPuXrL4%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"1c-NmpazMScs9tOqR7eDEesn+pqC9Q\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8d26b5c15e649ccb-SIN"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Missing password\"\n}"
				}
			]
		},
		{
			"name": "Register failed due to using wrong mock email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseData = pm.response.json();",
							"",
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 2000ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field - error\", function () {",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Value of the error key in the response body is 'Only defined users succeed registration' \", function () {",
							"    pm.expect(responseData.error).to.contain('Only defined users succeed registration');",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"hanle\",\r\n    \"password\": \"pistol\"\r\n}"
				},
				"url": "{{url}}/api/register"
			},
			"response": [
				{
					"name": "Register failed due to using wrong mock email",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"hanle\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}/api/register"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Mon, 14 Oct 2024 10:08:21 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "57"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1728900501&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=c7vx2qHqPpsSscSxiLJuBtFxBoFpZnqnXm4%2BFvq46lw%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1728900501&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=c7vx2qHqPpsSscSxiLJuBtFxBoFpZnqnXm4%2BFvq46lw%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"39-6jrJxn+7f+pQUhbPgNMst7tagpA\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "8d26c4871ade9d18-SIN"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Email is not valid\"\n}"
				}
			]
		},
		{
			"name": "Data-driven",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Set email and password from data file to Postman environment variables\r",
							"pm.environment.set(\"email\", pm.iterationData.get(\"email\"));\r",
							"pm.environment.set(\"password\", pm.iterationData.get(\"password\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resBody = pm.response.json();\r",
							"\r",
							"pm.test(`Verify Register response code is [${pm.variables.get(\"Status code\")}]  and Response body contains [${pm.variables.get(\"Messages\")}] with email: [${pm.variables.get(\"email\")}] and password: [${pm.variables.get(\"password\")}]`, () => {\r",
							"pm.response.to.have.status(pm.variables.get(\"Status code\"));\r",
							"    pm.expect(JSON.stringify(resBody)).to.contain(pm.variables.get(\"Messages\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://reqres.in/api/register"
			},
			"response": []
		}
	]
}